{"ast":null,"code":"import _objectSpread from \"/home/mastercalin/Desktop/social-client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/mastercalin/Desktop/social-client/src/components/scream/CommentForm.js\";\nimport React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport withStyles from \"@material-ui/core/styles/withStyles\"; //MUI\n\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\"; //Redux\n\nimport { connect } from \"react-redux\";\nimport { submitComment } from \"../../redux/actions/dataActions\";\n\nconst styles = theme => _objectSpread({}, theme.spreadThis);\n\nclass CommentForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      body: \"\",\n      errors\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          classes = _this$props.classes,\n          authenticated = _this$props.authenticated;\n    const errors = this.state.errors;\n    const commentFormMarkup = authenticated ? React.createElement(Grid, {\n      item: true,\n      sm: 12,\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      name: \"body\",\n      type: \"text\",\n      label: \"Comment on scream\",\n      error: errors.comment ? true : false,\n      helperText: errors.comment,\n      value: this.state.body,\n      onChange: this.handleChange,\n      fullWidth: true,\n      className: classes.textField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.button,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Submit\")), React.createElement(\"hr\", {\n      className: classes.visibleSeparator,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    })) : null;\n    return commentFormMarkup;\n  }\n\n}\n\nCommentForm.propTypes = {\n  submitComment: PropTypes.func.isRequired,\n  UI: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n  screamId: PropTypes.string.isRequired,\n  authenticated: PropTypes.bool.isRequired\n};\n\nconst mapStateToProps = state => ({\n  UI: state.UI,\n  authenticated: state.user.authenticated\n});\n\nexport default connect(mapStateToProps, {\n  submitComment\n})(withStyles(styles)(CommentForm));","map":{"version":3,"sources":["/home/mastercalin/Desktop/social-client/src/components/scream/CommentForm.js"],"names":["React","Component","Fragment","PropTypes","withStyles","Button","Grid","TextField","connect","submitComment","styles","theme","spreadThis","CommentForm","state","body","errors","render","props","classes","authenticated","commentFormMarkup","textAlign","handleSubmit","comment","handleChange","textField","button","visibleSeparator","propTypes","func","isRequired","UI","object","screamId","string","bool","mapStateToProps","user"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n//MUI\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\n//Redux\nimport { connect } from \"react-redux\";\nimport { submitComment } from \"../../redux/actions/dataActions\";\n\nconst styles = theme => ({\n  ...theme.spreadThis\n});\n\nclass CommentForm extends Component {\n  state = {\n    body: \"\",\n    errors\n  };\n  render() {\n    const { classes, authenticated } = this.props;\n    const errors = this.state.errors;\n\n    const commentFormMarkup = authenticated ? (\n      <Grid item sm={12} style={{ textAlign: \"center\" }}>\n        <form onSubmit={this.handleSubmit}>\n          <TextField\n            name=\"body\"\n            type=\"text\"\n            label=\"Comment on scream\"\n            error={errors.comment ? true : false}\n            helperText={errors.comment}\n            value={this.state.body}\n            onChange={this.handleChange}\n            fullWidth\n            className={classes.textField}\n          />\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.button}\n          >\n            Submit\n          </Button>\n        </form>\n        <hr className={classes.visibleSeparator} />\n      </Grid>\n    ) : null;\n    return commentFormMarkup;\n  }\n}\n\nCommentForm.propTypes = {\n  submitComment: PropTypes.func.isRequired,\n  UI: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n  screamId: PropTypes.string.isRequired,\n  authenticated: PropTypes.bool.isRequired\n};\n\nconst mapStateToProps = state => ({\n  UI: state.UI,\n  authenticated: state.user.authenticated\n});\n\nexport default connect(mapStateToProps, { submitComment })(\n  withStyles(styles)(CommentForm)\n);\n"]},"metadata":{},"sourceType":"module"}