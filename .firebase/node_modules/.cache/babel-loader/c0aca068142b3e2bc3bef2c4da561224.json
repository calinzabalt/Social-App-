{"ast":null,"code":"import _defineProperty from\"/home/mastercalin/Desktop/full-stack-app/social-client/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/home/mastercalin/Desktop/full-stack-app/social-client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/mastercalin/Desktop/full-stack-app/social-client/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/mastercalin/Desktop/full-stack-app/social-client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/mastercalin/Desktop/full-stack-app/social-client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/mastercalin/Desktop/full-stack-app/social-client/node_modules/@babel/runtime/helpers/esm/inherits\";import _objectSpread from\"/home/mastercalin/Desktop/full-stack-app/social-client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React,{Component,Fragment}from\"react\";import PropTypes from\"prop-types\";import withStyles from\"@material-ui/core/styles/withStyles\";import MyButton from\"../../util/MyButton\";// Redux\nimport{connect}from\"react-redux\";import{postScream,clearErrors}from\"../../redux/actions/dataActions\";//Mui\nimport Button from\"@material-ui/core/Button\";import TextField from\"@material-ui/core/TextField\";import Dialog from\"@material-ui/core/Dialog\";import DialogContent from\"@material-ui/core/DialogContent\";import DialogTitle from\"@material-ui/core/DialogTitle\";import CircularProgress from\"@material-ui/core/CircularProgress\";import AddIcon from\"@material-ui/icons/Add\";import CloseIcon from\"@material-ui/icons/Close\";var styles=function styles(theme){return _objectSpread({},theme.spreadThis,{submitButton:{position:\"relative\",float:\"right\",marginTop:10},progressSpinner:{position:\"absolute\"},closeButton:{position:\"absolute\",left:\"91%\",top:\"6%\"}});};var PostScream=/*#__PURE__*/function(_Component){_inherits(PostScream,_Component);function PostScream(){var _getPrototypeOf2;var _this;_classCallCheck(this,PostScream);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(PostScream)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={open:false,body:\"\",errors:{}};_this.handleOpen=function(){_this.setState({open:true});};_this.handleClose=function(){_this.props.clearErrors();_this.setState({open:false,errors:{}});};_this.handleChange=function(event){_this.setState(_defineProperty({},event.target.name,event.target.value));};_this.handleSubmit=function(event){event.preventDefault();_this.props.postScream({body:_this.state.body});};return _this;}_createClass(PostScream,[{key:\"componentWillReceiveProps\",value:function componentWillReceiveProps(nextProps){if(nextProps.UI.erros){this.setState({errors:nextProps.UI.errors});}if(!nextProps.UI.errors&&!nextProps.UI.loading){this.setState({body:\"\",open:false,errors:{}});}}},{key:\"render\",value:function render(){var errors=this.state.errors;var _this$props=this.props,classes=_this$props.classes,loading=_this$props.UI.loading;return React.createElement(Fragment,null,React.createElement(MyButton,{onClick:this.handleOpen,tip:\"Post a post! :))\"},React.createElement(AddIcon,null)),React.createElement(Dialog,{open:this.state.open,onClose:this.handleClose,fullWidth:true,maxWidth:\"sm\"},React.createElement(MyButton,{tip:\"Close\",onClick:this.handleClose,tipClassName:classes.closeButton},React.createElement(CloseIcon,null)),React.createElement(DialogTitle,null,\"Post something!\"),React.createElement(DialogContent,null,React.createElement(\"form\",{onSubmit:this.handleSubmit},React.createElement(TextField,{name:\"body\",type:\"text\",label:\"SCREAM!!\",multiline:true,row:\"3\",placeholder:\"Scream at your fellow\",error:errors.body?true:false,helperText:errors.body,className:classes.textField,onChange:this.handleChange,fullWidth:true}),React.createElement(Button,{type:\"submit\",variant:\"contained\",color:\"primary\",className:classes.submitButton,disabled:loading},\"Submit\",loading&&React.createElement(CircularProgress,{size:30,className:classes.progressSpinner}))))));}}]);return PostScream;}(Component);PostScream.propType={postScream:PropTypes.func.isRequired,clearErrors:PropTypes.func.isRequired,UI:PropTypes.object.isRequired};var mapstateToProps=function mapstateToProps(state){return{UI:state.UI};};export default connect(mapstateToProps,{postScream:postScream,clearErrors:clearErrors})(withStyles(styles)(PostScream));","map":{"version":3,"sources":["/home/mastercalin/Desktop/full-stack-app/social-client/src/components/scream/PostScream.js"],"names":["React","Component","Fragment","PropTypes","withStyles","MyButton","connect","postScream","clearErrors","Button","TextField","Dialog","DialogContent","DialogTitle","CircularProgress","AddIcon","CloseIcon","styles","theme","spreadThis","submitButton","position","float","marginTop","progressSpinner","closeButton","left","top","PostScream","state","open","body","errors","handleOpen","setState","handleClose","props","handleChange","event","target","name","value","handleSubmit","preventDefault","nextProps","UI","erros","loading","classes","textField","propType","func","isRequired","object","mapstateToProps"],"mappings":"88BAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,SAAP,KAAsB,YAAtB,CACA,MAAOC,CAAAA,UAAP,KAAuB,qCAAvB,CACA,MAAOC,CAAAA,QAAP,KAAqB,qBAArB,CACA;AACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,UAAT,CAAqBC,WAArB,KAAwC,iCAAxC,CACA;AACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,SAAP,KAAsB,6BAAtB,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,aAAP,KAA0B,iCAA1B,CACA,MAAOC,CAAAA,WAAP,KAAwB,+BAAxB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,oCAA7B,CACA,MAAOC,CAAAA,OAAP,KAAoB,wBAApB,CACA,MAAOC,CAAAA,SAAP,KAAsB,0BAAtB,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAAAC,KAAK,0BACfA,KAAK,CAACC,UADS,EAElBC,YAAY,CAAE,CACZC,QAAQ,CAAE,UADE,CAEZC,KAAK,CAAE,OAFK,CAGZC,SAAS,CAAE,EAHC,CAFI,CAOlBC,eAAe,CAAE,CACfH,QAAQ,CAAE,UADK,CAPC,CAUlBI,WAAW,CAAE,CACXJ,QAAQ,CAAE,UADC,CAEXK,IAAI,CAAE,KAFK,CAGXC,GAAG,CAAE,IAHM,CAVK,IAApB,C,GAiBMC,CAAAA,U,+YACJC,K,CAAQ,CACNC,IAAI,CAAE,KADA,CAENC,IAAI,CAAE,EAFA,CAGNC,MAAM,CAAE,EAHF,C,OAeRC,U,CAAa,UAAM,CACjB,MAAKC,QAAL,CAAc,CAAEJ,IAAI,CAAE,IAAR,CAAd,EACD,C,OACDK,W,CAAc,UAAM,CAClB,MAAKC,KAAL,CAAW5B,WAAX,GACA,MAAK0B,QAAL,CAAc,CAAEJ,IAAI,CAAE,KAAR,CAAeE,MAAM,CAAE,EAAvB,CAAd,EACD,C,OACDK,Y,CAAe,SAAAC,KAAK,CAAI,CACtB,MAAKJ,QAAL,oBAAiBI,KAAK,CAACC,MAAN,CAAaC,IAA9B,CAAqCF,KAAK,CAACC,MAAN,CAAaE,KAAlD,GACD,C,OACDC,Y,CAAe,SAAAJ,KAAK,CAAI,CACtBA,KAAK,CAACK,cAAN,GACA,MAAKP,KAAL,CAAW7B,UAAX,CAAsB,CAAEwB,IAAI,CAAE,MAAKF,KAAL,CAAWE,IAAnB,CAAtB,EACD,C,kHAvByBa,S,CAAW,CACnC,GAAIA,SAAS,CAACC,EAAV,CAAaC,KAAjB,CAAwB,CACtB,KAAKZ,QAAL,CAAc,CACZF,MAAM,CAAEY,SAAS,CAACC,EAAV,CAAab,MADT,CAAd,EAGD,CACD,GAAI,CAACY,SAAS,CAACC,EAAV,CAAab,MAAd,EAAwB,CAACY,SAAS,CAACC,EAAV,CAAaE,OAA1C,CAAmD,CACjD,KAAKb,QAAL,CAAc,CAAEH,IAAI,CAAE,EAAR,CAAYD,IAAI,CAAE,KAAlB,CAAyBE,MAAM,CAAE,EAAjC,CAAd,EACD,CACF,C,uCAeQ,IACCA,CAAAA,MADD,CACY,KAAKH,KADjB,CACCG,MADD,iBAKH,KAAKI,KALF,CAGLY,OAHK,aAGLA,OAHK,CAICD,OAJD,aAILF,EAJK,CAICE,OAJD,CAMP,MACE,qBAAC,QAAD,MACE,oBAAC,QAAD,EAAU,OAAO,CAAE,KAAKd,UAAxB,CAAoC,GAAG,CAAC,kBAAxC,EACE,oBAAC,OAAD,MADF,CADF,CAIE,oBAAC,MAAD,EACE,IAAI,CAAE,KAAKJ,KAAL,CAAWC,IADnB,CAEE,OAAO,CAAE,KAAKK,WAFhB,CAGE,SAAS,KAHX,CAIE,QAAQ,CAAC,IAJX,EAME,oBAAC,QAAD,EACE,GAAG,CAAC,OADN,CAEE,OAAO,CAAE,KAAKA,WAFhB,CAGE,YAAY,CAAEa,OAAO,CAACvB,WAHxB,EAKE,oBAAC,SAAD,MALF,CANF,CAaE,oBAAC,WAAD,wBAbF,CAcE,oBAAC,aAAD,MACE,4BAAM,QAAQ,CAAE,KAAKiB,YAArB,EACE,oBAAC,SAAD,EACE,IAAI,CAAC,MADP,CAEE,IAAI,CAAC,MAFP,CAGE,KAAK,CAAC,UAHR,CAIE,SAAS,KAJX,CAKE,GAAG,CAAC,GALN,CAME,WAAW,CAAC,uBANd,CAOE,KAAK,CAAEV,MAAM,CAACD,IAAP,CAAc,IAAd,CAAqB,KAP9B,CAQE,UAAU,CAAEC,MAAM,CAACD,IARrB,CASE,SAAS,CAAEiB,OAAO,CAACC,SATrB,CAUE,QAAQ,CAAE,KAAKZ,YAVjB,CAWE,SAAS,KAXX,EADF,CAcE,oBAAC,MAAD,EACE,IAAI,CAAC,QADP,CAEE,OAAO,CAAC,WAFV,CAGE,KAAK,CAAC,SAHR,CAIE,SAAS,CAAEW,OAAO,CAAC5B,YAJrB,CAKE,QAAQ,CAAE2B,OALZ,WAQGA,OAAO,EACN,oBAAC,gBAAD,EACE,IAAI,CAAE,EADR,CAEE,SAAS,CAAEC,OAAO,CAACxB,eAFrB,EATJ,CAdF,CADF,CAdF,CAJF,CADF,CAsDD,C,wBA1FsBvB,S,EA6FzB2B,UAAU,CAACsB,QAAX,CAAsB,CACpB3C,UAAU,CAAEJ,SAAS,CAACgD,IAAV,CAAeC,UADP,CAEpB5C,WAAW,CAAEL,SAAS,CAACgD,IAAV,CAAeC,UAFR,CAGpBP,EAAE,CAAE1C,SAAS,CAACkD,MAAV,CAAiBD,UAHD,CAAtB,CAMA,GAAME,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAzB,KAAK,QAAK,CAChCgB,EAAE,CAAEhB,KAAK,CAACgB,EADsB,CAAL,EAA7B,CAIA,cAAevC,CAAAA,OAAO,CAACgD,eAAD,CAAkB,CAAE/C,UAAU,CAAVA,UAAF,CAAcC,WAAW,CAAXA,WAAd,CAAlB,CAAP,CACbJ,UAAU,CAACa,MAAD,CAAV,CAAmBW,UAAnB,CADa,CAAf","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport MyButton from \"../../util/MyButton\";\n// Redux\nimport { connect } from \"react-redux\";\nimport { postScream, clearErrors } from \"../../redux/actions/dataActions\";\n//Mui\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nconst styles = theme => ({\n  ...theme.spreadThis,\n  submitButton: {\n    position: \"relative\",\n    float: \"right\",\n    marginTop: 10\n  },\n  progressSpinner: {\n    position: \"absolute\"\n  },\n  closeButton: {\n    position: \"absolute\",\n    left: \"91%\",\n    top: \"6%\"\n  }\n});\n\nclass PostScream extends Component {\n  state = {\n    open: false,\n    body: \"\",\n    errors: {}\n  };\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.UI.erros) {\n      this.setState({\n        errors: nextProps.UI.errors\n      });\n    }\n    if (!nextProps.UI.errors && !nextProps.UI.loading) {\n      this.setState({ body: \"\", open: false, errors: {} });\n    }\n  }\n  handleOpen = () => {\n    this.setState({ open: true });\n  };\n  handleClose = () => {\n    this.props.clearErrors();\n    this.setState({ open: false, errors: {} });\n  };\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.postScream({ body: this.state.body });\n  };\n  render() {\n    const { errors } = this.state;\n    const {\n      classes,\n      UI: { loading }\n    } = this.props;\n    return (\n      <Fragment>\n        <MyButton onClick={this.handleOpen} tip=\"Post a post! :))\">\n          <AddIcon />\n        </MyButton>\n        <Dialog\n          open={this.state.open}\n          onClose={this.handleClose}\n          fullWidth\n          maxWidth=\"sm\"\n        >\n          <MyButton\n            tip=\"Close\"\n            onClick={this.handleClose}\n            tipClassName={classes.closeButton}\n          >\n            <CloseIcon />\n          </MyButton>\n          <DialogTitle>Post something!</DialogTitle>\n          <DialogContent>\n            <form onSubmit={this.handleSubmit}>\n              <TextField\n                name=\"body\"\n                type=\"text\"\n                label=\"SCREAM!!\"\n                multiline\n                row=\"3\"\n                placeholder=\"Scream at your fellow\"\n                error={errors.body ? true : false}\n                helperText={errors.body}\n                className={classes.textField}\n                onChange={this.handleChange}\n                fullWidth\n              />\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submitButton}\n                disabled={loading}\n              >\n                Submit\n                {loading && (\n                  <CircularProgress\n                    size={30}\n                    className={classes.progressSpinner}\n                  />\n                )}\n              </Button>\n            </form>\n          </DialogContent>\n        </Dialog>\n      </Fragment>\n    );\n  }\n}\n\nPostScream.propType = {\n  postScream: PropTypes.func.isRequired,\n  clearErrors: PropTypes.func.isRequired,\n  UI: PropTypes.object.isRequired\n};\n\nconst mapstateToProps = state => ({\n  UI: state.UI\n});\n\nexport default connect(mapstateToProps, { postScream, clearErrors })(\n  withStyles(styles)(PostScream)\n);\n"]},"metadata":{},"sourceType":"module"}