{"ast":null,"code":"import _objectSpread from \"/home/mastercalin/Desktop/social-client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/mastercalin/Desktop/social-client/src/components/scream/Comments.js\";\nimport React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { Link } from \"react-router-dom\";\nimport dayjs from \"dayjs\"; //MUI\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst styles = theme => _objectSpread({}, theme.spreadThis, {\n  commentImage: {\n    maxWidth: \"100%\",\n    height: 100,\n    objectFit: \"cover\",\n    borderRadius: \"50%\"\n  },\n  commentData: {\n    marginLeft: 20\n  }\n});\n\nclass Comments extends Component {\n  render() {\n    const _this$props = this.props,\n          comments = _this$props.comments,\n          classes = _this$props.classes;\n    return React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, comments.map((comment, index) => {\n      const body = comment.body,\n            createdAt = comment.createdAt,\n            userImage = comment.userImage,\n            userHandle = comment.userHandle;\n      return React.createElement(Fragment, {\n        key: createdAt,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        sm: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: userImage,\n        alt: \"comment\",\n        className: classes.commentImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), React.createElement(Grid, {\n        item: true,\n        sm: 9,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.commentData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h5\",\n        component: Link,\n        to: `/users/${userHandle}`,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, userHandle), React.createElement(Typography, {\n        variant: \"body2\",\n        color: \"textSecondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, dayjs(createdAt).format(\"h:mm a, MMM DD YYYY\")), React.createElement(\"hr\", {\n        className: classes.invisibleSeparator,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(Typography, {\n        variant: \"body1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, body)))))), index !== comments.length - 1 && React.createElement(\"hr\", {\n        className: classes.invisibleSeparator,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }));\n    }));\n  }\n\n}\n\nComments.propTypes = {\n  comments: PropTypes.array.isRequired\n};\nexport default withStyles(styles)(Comments);","map":{"version":3,"sources":["/home/mastercalin/Desktop/social-client/src/components/scream/Comments.js"],"names":["React","Component","Fragment","PropTypes","withStyles","Link","dayjs","Grid","Typography","styles","theme","spreadThis","commentImage","maxWidth","height","objectFit","borderRadius","commentData","marginLeft","Comments","render","props","comments","classes","map","comment","index","body","createdAt","userImage","userHandle","format","invisibleSeparator","length","propTypes","array","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;;AAEA,MAAMC,MAAM,GAAGC,KAAK,sBACfA,KAAK,CAACC,UADS;AAElBC,EAAAA,YAAY,EAAE;AACZC,IAAAA,QAAQ,EAAE,MADE;AAEZC,IAAAA,MAAM,EAAE,GAFI;AAGZC,IAAAA,SAAS,EAAE,OAHC;AAIZC,IAAAA,YAAY,EAAE;AAJF,GAFI;AAQlBC,EAAAA,WAAW,EAAE;AACXC,IAAAA,UAAU,EAAE;AADD;AARK,EAApB;;AAaA,MAAMC,QAAN,SAAuBlB,SAAvB,CAAiC;AAC/BmB,EAAAA,MAAM,GAAG;AAAA,wBACuB,KAAKC,KAD5B;AAAA,UACCC,QADD,eACCA,QADD;AAAA,UACWC,OADX,eACWA,OADX;AAEP,WACE,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,QAAQ,CAACE,GAAT,CAAa,CAACC,OAAD,EAAUC,KAAV,KAAoB;AAAA,YACxBC,IADwB,GACmBF,OADnB,CACxBE,IADwB;AAAA,YAClBC,SADkB,GACmBH,OADnB,CAClBG,SADkB;AAAA,YACPC,SADO,GACmBJ,OADnB,CACPI,SADO;AAAA,YACIC,UADJ,GACmBL,OADnB,CACIK,UADJ;AAEhC,aACE,oBAAC,QAAD;AAAU,QAAA,GAAG,EAAEF,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,GAAG,EAAEC,SADP;AAEE,QAAA,GAAG,EAAC,SAFN;AAGE,QAAA,SAAS,EAAEN,OAAO,CAACX,YAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAME,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAEW,OAAO,CAACN,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AACE,QAAA,OAAO,EAAC,IADV;AAEE,QAAA,SAAS,EAAEZ,IAFb;AAGE,QAAA,EAAE,EAAG,UAASyB,UAAW,EAH3B;AAIE,QAAA,KAAK,EAAC,SAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMGA,UANH,CADF,EASE,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC,OAApB;AAA4B,QAAA,KAAK,EAAC,eAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGxB,KAAK,CAACsB,SAAD,CAAL,CAAiBG,MAAjB,CAAwB,qBAAxB,CADH,CATF,EAYE;AAAI,QAAA,SAAS,EAAER,OAAO,CAACS,kBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZF,EAaE,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA6BL,IAA7B,CAbF,CADF,CANF,CADF,CADF,CADF,EA6BGD,KAAK,KAAKJ,QAAQ,CAACW,MAAT,GAAkB,CAA5B,IACC;AAAI,QAAA,SAAS,EAAEV,OAAO,CAACS,kBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA9BJ,CADF;AAmCD,KArCA,CADH,CADF;AA0CD;;AA7C8B;;AAgDjCb,QAAQ,CAACe,SAAT,GAAqB;AACnBZ,EAAAA,QAAQ,EAAEnB,SAAS,CAACgC,KAAV,CAAgBC;AADP,CAArB;AAIA,eAAehC,UAAU,CAACK,MAAD,CAAV,CAAmBU,QAAnB,CAAf","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { Link } from \"react-router-dom\";\nimport dayjs from \"dayjs\";\n//MUI\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst styles = theme => ({\n  ...theme.spreadThis,\n  commentImage: {\n    maxWidth: \"100%\",\n    height: 100,\n    objectFit: \"cover\",\n    borderRadius: \"50%\"\n  },\n  commentData: {\n    marginLeft: 20\n  }\n});\n\nclass Comments extends Component {\n  render() {\n    const { comments, classes } = this.props;\n    return (\n      <Grid container>\n        {comments.map((comment, index) => {\n          const { body, createdAt, userImage, userHandle } = comment;\n          return (\n            <Fragment key={createdAt}>\n              <Grid item sm={12}>\n                <Grid container>\n                  <Grid item sm={2}>\n                    <img\n                      src={userImage}\n                      alt=\"comment\"\n                      className={classes.commentImage}\n                    />\n                    <Grid item sm={9}>\n                      <div className={classes.commentData}>\n                        <Typography\n                          variant=\"h5\"\n                          component={Link}\n                          to={`/users/${userHandle}`}\n                          color=\"primary\"\n                        >\n                          {userHandle}\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\">\n                          {dayjs(createdAt).format(\"h:mm a, MMM DD YYYY\")}\n                        </Typography>\n                        <hr className={classes.invisibleSeparator} />\n                        <Typography variant=\"body1\">{body}</Typography>\n                      </div>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n              {index !== comments.length - 1 && (\n                <hr className={classes.invisibleSeparator} />\n              )}\n            </Fragment>\n          );\n        })}\n      </Grid>\n    );\n  }\n}\n\nComments.propTypes = {\n  comments: PropTypes.array.isRequired\n};\n\nexport default withStyles(styles)(Comments);\n"]},"metadata":{},"sourceType":"module"}