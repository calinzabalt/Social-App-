{"ast":null,"code":"import _objectSpread from \"/home/mastercalin/Desktop/social-client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { SET_SCREAMS, LIKE_SCREAM, UNLIKE_SCREAM, LOADING_DATA } from \"../types\";\nconst initialState = {\n  screams: [],\n  scream: {},\n  loading: false\n};\nexport default function (state = initialState, actions) {\n  switch (actions.type) {\n    case LOADING_DATA:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case SET_SCREAMS:\n      return _objectSpread({}, state, {\n        screams: actions.payload,\n        loading: false\n      });\n\n    case LIKE_SCREAM:\n    case UNLIKE_SCREAM:\n      let index = state.screams.findIndex(scream => scream.screamId === actions.payload.screamId);\n      state.screams[index] = action.payload;\n      return _objectSpread({}, state);\n  }\n}","map":{"version":3,"sources":["/home/mastercalin/Desktop/social-client/src/redux/reducers/dataReducer.js"],"names":["SET_SCREAMS","LIKE_SCREAM","UNLIKE_SCREAM","LOADING_DATA","initialState","screams","scream","loading","state","actions","type","payload","index","findIndex","screamId","action"],"mappings":";AAAA,SACEA,WADF,EAEEC,WAFF,EAGEC,aAHF,EAIEC,YAJF,QAKO,UALP;AAOA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,EADU;AAEnBC,EAAAA,MAAM,EAAE,EAFW;AAGnBC,EAAAA,OAAO,EAAE;AAHU,CAArB;AAMA,eAAe,UAASC,KAAK,GAAGJ,YAAjB,EAA+BK,OAA/B,EAAwC;AACrD,UAAQA,OAAO,CAACC,IAAhB;AACE,SAAKP,YAAL;AACE,+BACKK,KADL;AAEED,QAAAA,OAAO,EAAE;AAFX;;AAIF,SAAKP,WAAL;AACE,+BACKQ,KADL;AAEEH,QAAAA,OAAO,EAAEI,OAAO,CAACE,OAFnB;AAGEJ,QAAAA,OAAO,EAAE;AAHX;;AAKF,SAAKN,WAAL;AACA,SAAKC,aAAL;AACE,UAAIU,KAAK,GAAGJ,KAAK,CAACH,OAAN,CAAcQ,SAAd,CACVP,MAAM,IAAIA,MAAM,CAACQ,QAAP,KAAoBL,OAAO,CAACE,OAAR,CAAgBG,QADpC,CAAZ;AAGAN,MAAAA,KAAK,CAACH,OAAN,CAAcO,KAAd,IAAuBG,MAAM,CAACJ,OAA9B;AACA,+BACKH,KADL;AAlBJ;AAsBD","sourcesContent":["import {\n  SET_SCREAMS,\n  LIKE_SCREAM,\n  UNLIKE_SCREAM,\n  LOADING_DATA\n} from \"../types\";\n\nconst initialState = {\n  screams: [],\n  scream: {},\n  loading: false\n};\n\nexport default function(state = initialState, actions) {\n  switch (actions.type) {\n    case LOADING_DATA:\n      return {\n        ...state,\n        loading: true\n      };\n    case SET_SCREAMS:\n      return {\n        ...state,\n        screams: actions.payload,\n        loading: false\n      };\n    case LIKE_SCREAM:\n    case UNLIKE_SCREAM:\n      let index = state.screams.findIndex(\n        scream => scream.screamId === actions.payload.screamId\n      );\n      state.screams[index] = action.payload;\n      return {\n        ...state\n      };\n  }\n}\n"]},"metadata":{},"sourceType":"module"}