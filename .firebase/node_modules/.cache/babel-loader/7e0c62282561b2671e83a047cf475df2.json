{"ast":null,"code":"import _objectSpread from \"/home/mastercalin/Desktop/social-client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/mastercalin/Desktop/social-client/src/components/ScreamDialog.js\";\nimport React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport MyButton from \"../util/MyButton\";\nimport dayjs from \"dayjs\";\nimport { Link } from \"react-router-dom\"; //MUI\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\"; //Icons\n\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport UnfoldMore from \"@material-ui/icons/UnfoldMore\"; //Redux\n\nimport { connect } from \"react-redux\";\nimport { getScream } from \"../redux/actions/dataActions\";\n\nconst styles = theme => _objectSpread({}, theme.spreadThis, {\n  invisibleSeparator: {\n    border: \"none\",\n    margin: 4\n  }\n});\n\nclass ScreamDialog extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      open: false\n    };\n\n    this.handleOpen = () => {\n      this.setState({\n        open: true\n      });\n      this.props.getScream(this.props.screamId);\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          classes = _this$props.classes,\n          _this$props$scream = _this$props.scream,\n          screamId = _this$props$scream.screamId,\n          body = _this$props$scream.body,\n          createdAt = _this$props$scream.createdAt,\n          likeCount = _this$props$scream.likeCount,\n          commentCount = _this$props$scream.commentCount,\n          userImage = _this$props$scream.userImage,\n          userHandle = _this$props$scream.userHandle,\n          loading = _this$props.UI.loading;\n    const dialogMarkup = loading ? React.createElement(CircularProgress, {\n      size: 200,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }) : React.createElement(Grid, {\n      container: true,\n      spacing: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      sm: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: userImage,\n      alt: \"Profile\",\n      className: classes.profileImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      sm: 7,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      component: Link,\n      color: \"primary\",\n      variant: \"h5\",\n      to: `/users/${userHandle}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"@\", userHandle), React.createElement(\"hr\", {\n      className: classes.invisibleSeparator,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      variant: \"body2\",\n      color: \"textSecondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, dayjs(createdAt).format(\"h:mm a, MMMM DD YYYY\"))));\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(MyButton, {\n      onClick: this.handleOpen,\n      tip: \"Expand scream\",\n      tipClassName: classes.expandButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(UnfoldMore, {\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    })), React.createElement(Dialog, {\n      open: this.state.open,\n      onClose: this.handleClose,\n      fullWidth: true,\n      maxWidth: \"sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(MyButton, {\n      tip: \"Close\",\n      onClick: this.handleClose,\n      tipClassName: classes.closeButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(CloseIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nScreamDialog.propTypes = {\n  getScream: PropTypes.func.isRequired,\n  screamId: PropTypes.string.isRequired,\n  userHandle: PropTypes.string.isRequired,\n  scream: PropTypes.object.isRequired,\n  UI: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  scream: state.data.scream,\n  UI: state.UI\n});\n\nconst mapActionsToProps = {\n  getScream\n};\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(ScreamDialog));","map":{"version":3,"sources":["/home/mastercalin/Desktop/social-client/src/components/ScreamDialog.js"],"names":["React","Component","Fragment","PropTypes","withStyles","MyButton","dayjs","Link","Dialog","DialogContent","DialogTitle","CircularProgress","Grid","Typography","CloseIcon","UnfoldMore","connect","getScream","styles","theme","spreadThis","invisibleSeparator","border","margin","ScreamDialog","state","open","handleOpen","setState","props","screamId","handleClose","render","classes","scream","body","createdAt","likeCount","commentCount","userImage","userHandle","loading","UI","dialogMarkup","profileImage","format","expandButton","closeButton","propTypes","func","isRequired","string","object","mapStateToProps","data","mapActionsToProps"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport MyButton from \"../util/MyButton\";\nimport dayjs from \"dayjs\";\nimport { Link } from \"react-router-dom\";\n//MUI\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\n//Icons\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport UnfoldMore from \"@material-ui/icons/UnfoldMore\";\n//Redux\nimport { connect } from \"react-redux\";\nimport { getScream } from \"../redux/actions/dataActions\";\n\nconst styles = theme => ({\n  ...theme.spreadThis,\n  invisibleSeparator: {\n    border: \"none\",\n    margin: 4\n  }\n});\n\nclass ScreamDialog extends Component {\n  state = {\n    open: false\n  };\n  handleOpen = () => {\n    this.setState({ open: true });\n    this.props.getScream(this.props.screamId);\n  };\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n  render() {\n    const {\n      classes,\n      scream: {\n        screamId,\n        body,\n        createdAt,\n        likeCount,\n        commentCount,\n        userImage,\n        userHandle\n      },\n      UI: { loading }\n    } = this.props;\n\n    const dialogMarkup = loading ? (\n      <CircularProgress size={200} />\n    ) : (\n      <Grid container spacing={16}>\n        <Grid item sm={5}>\n          <img src={userImage} alt=\"Profile\" className={classes.profileImage} />\n        </Grid>\n        <Grid item sm={7}>\n          <Typography\n            component={Link}\n            color=\"primary\"\n            variant=\"h5\"\n            to={`/users/${userHandle}`}\n          >\n            @{userHandle}\n          </Typography>\n          <hr className={classes.invisibleSeparator} />\n          <Typography variant=\"body2\" color=\"textSecondary\">\n            {dayjs(createdAt).format(\"h:mm a, MMMM DD YYYY\")}\n          </Typography>\n        </Grid>\n      </Grid>\n    );\n    return (\n      <Fragment>\n        <MyButton\n          onClick={this.handleOpen}\n          tip=\"Expand scream\"\n          tipClassName={classes.expandButton}\n        >\n          <UnfoldMore color=\"primary\" />\n        </MyButton>\n        <Dialog\n          open={this.state.open}\n          onClose={this.handleClose}\n          fullWidth\n          maxWidth=\"sm\"\n        >\n          <MyButton\n            tip=\"Close\"\n            onClick={this.handleClose}\n            tipClassName={classes.closeButton}\n          >\n            <CloseIcon />\n          </MyButton>\n        </Dialog>\n      </Fragment>\n    );\n  }\n}\n\nScreamDialog.propTypes = {\n  getScream: PropTypes.func.isRequired,\n  screamId: PropTypes.string.isRequired,\n  userHandle: PropTypes.string.isRequired,\n  scream: PropTypes.object.isRequired,\n  UI: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  scream: state.data.scream,\n  UI: state.UI\n});\n\nconst mapActionsToProps = {\n  getScream\n};\n\nexport default connect(\n  mapStateToProps,\n  mapActionsToProps\n)(withStyles(styles)(ScreamDialog));\n"]},"metadata":{},"sourceType":"module"}