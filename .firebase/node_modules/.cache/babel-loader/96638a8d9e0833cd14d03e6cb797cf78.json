{"ast":null,"code":"import _objectSpread from \"/home/mastercalin/Desktop/social-client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/mastercalin/Desktop/social-client/src/components/EditDetails.js\";\nimport React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport withStyles from \"@material-ui/core/styles/withStyles\"; // Redux\n\nimport { connect } from \"react-redux\";\nimport { editUserDetails } from \"../redux/actions/userActions\"; //Mui\n\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\"; //Icon\n\nimport EditIcon from \"@material-ui/iconsEdit\";\n\nconst styles = theme => _objectSpread({}, theme.spreadThis);\n\nclass EditDetails extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      bio: \"\",\n      website: \"\",\n      location: \"\",\n      open: false\n    };\n\n    this.handleOpen = () => {\n      this.setState({\n        open: true\n      });\n      mapUserDetailsToState(this.props.credentials);\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.mapUserDetailsToState = credentials => {\n      this.setState({\n        bio: credentials.bio ? credentials.bio : \"\",\n        website: credentials.website ? credentials.website : \"\",\n        location: credentials.location ? credentials.location : \"\"\n      });\n    };\n  }\n\n  componentDidMount() {\n    const credentials = this.props.credentials;\n    mapUserDetailsToState(credentials);\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      title: \"Edit details\",\n      placement: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      onClick: this.handleOpen,\n      className: classes.button,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(EditIcon, {\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }))), React.createElement(Dialog, {\n      open: this.state.open,\n      onClose: this.handleClose,\n      fullWidth: true,\n      maxWidth: \"sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Edit details\"), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      name: \"bio\",\n      type: \"text\",\n      label: \"Bio\",\n      multiline: true,\n      rows: \"3\",\n      placeholder: \"A short biography about yourself\",\n      className: classes.TextField,\n      value: this.state.bio,\n      onChange: this.onChange,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      name: \"bio\",\n      type: \"text\",\n      label: \"Bio\",\n      multiline: true,\n      rows: \"3\",\n      placeholder: \"A short biography about yourself\",\n      className: classes.TextField,\n      value: this.state.bio,\n      onChange: this.onChange,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      name: \"bio\",\n      type: \"text\",\n      label: \"Bio\",\n      multiline: true,\n      rows: \"3\",\n      placeholder: \"A short biography about yourself\",\n      className: classes.TextField,\n      value: this.state.bio,\n      onChange: this.onChange,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nEditDetails.propTypes = {\n  editUserDetails: PropTypes.func.isRequired,\n  classes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  credentials: state.user.credentials\n});\n\nexport default connect(mapStateToProps, {\n  editUserDetails\n})(withStyles(styles)(EditDetails));","map":{"version":3,"sources":["/home/mastercalin/Desktop/social-client/src/components/EditDetails.js"],"names":["React","Component","Fragment","PropTypes","withStyles","connect","editUserDetails","Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Tooltip","IconButton","EditIcon","styles","theme","spreadThis","EditDetails","state","bio","website","location","open","handleOpen","setState","mapUserDetailsToState","props","credentials","handleClose","componentDidMount","render","classes","button","onChange","propTypes","func","isRequired","object","mapStateToProps","user"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n// Redux\nimport { connect } from \"react-redux\";\nimport { editUserDetails } from \"../redux/actions/userActions\";\n//Mui\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\n//Icon\nimport EditIcon from \"@material-ui/iconsEdit\";\n\nconst styles = theme => ({\n  ...theme.spreadThis\n});\n\nclass EditDetails extends Component {\n  state = {\n    bio: \"\",\n    website: \"\",\n    location: \"\",\n    open: false\n  };\n  handleOpen = () => {\n    this.setState({ open: true });\n    mapUserDetailsToState(this.props.credentials);\n  };\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n  componentDidMount() {\n    const { credentials } = this.props;\n    mapUserDetailsToState(credentials);\n  }\n\n  mapUserDetailsToState = credentials => {\n    this.setState({\n      bio: credentials.bio ? credentials.bio : \"\",\n      website: credentials.website ? credentials.website : \"\",\n      location: credentials.location ? credentials.location : \"\"\n    });\n  };\n  render() {\n    const { classes } = this.props;\n    return (\n      <Fragment>\n        <Tooltip title=\"Edit details\" placement=\"top\">\n          <IconButton onClick={this.handleOpen} className={classes.button}>\n            <EditIcon color=\"primary\" />\n          </IconButton>\n        </Tooltip>\n        <Dialog\n          open={this.state.open}\n          onClose={this.handleClose}\n          fullWidth\n          maxWidth=\"sm\"\n        >\n          <DialogTitle>Edit details</DialogTitle>\n          <DialogContent>\n            <form>\n              <TextField\n                name=\"bio\"\n                type=\"text\"\n                label=\"Bio\"\n                multiline\n                rows=\"3\"\n                placeholder=\"A short biography about yourself\"\n                className={classes.TextField}\n                value={this.state.bio}\n                onChange={this.onChange}\n                fullWidth\n              />\n              <TextField\n                name=\"bio\"\n                type=\"text\"\n                label=\"Bio\"\n                multiline\n                rows=\"3\"\n                placeholder=\"A short biography about yourself\"\n                className={classes.TextField}\n                value={this.state.bio}\n                onChange={this.onChange}\n                fullWidth\n              />\n              <TextField\n                name=\"bio\"\n                type=\"text\"\n                label=\"Bio\"\n                multiline\n                rows=\"3\"\n                placeholder=\"A short biography about yourself\"\n                className={classes.TextField}\n                value={this.state.bio}\n                onChange={this.onChange}\n                fullWidth\n              />\n            </form>\n          </DialogContent>\n        </Dialog>\n      </Fragment>\n    );\n  }\n}\n\nEditDetails.propTypes = {\n  editUserDetails: PropTypes.func.isRequired,\n  classes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  credentials: state.user.credentials\n});\n\nexport default connect(mapStateToProps, { editUserDetails })(\n  withStyles(styles)(EditDetails)\n);\n"]},"metadata":{},"sourceType":"module"}