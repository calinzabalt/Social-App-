{"ast":null,"code":"import { SET_SCREAMS, LOADING_DATA, LIKE_SCREAM, UNLIKE_SCREAM, DELETE_SCREAM, SET_ERRORS, POST_SCREAM, CLEAR_ERRORS, LOADING_UI, SET_SCREAM } from \"../types\";\nimport axios from \"axios\"; //All screams\n\nexport const getScreams = () => dispatch => {\n  dispatch({\n    type: LOADING_DATA\n  });\n  axios.get(\"/screams\").then(res => {\n    dispatch({\n      type: SET_SCREAMS,\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: SET_SCREAMS,\n      payload: []\n    });\n  });\n};\nexport const getScream = screamId => dispatch => {\n  dispatch({\n    type: LOADING_UI\n  });\n  axios.get(`/scream/${screamId}`).then(res => {\n    dispatch({\n      type: SET_SCREAM,\n      payload: res.data\n    });\n  });\n}; //Post a scream\n\nexport const postScream = newScream => dispatch => {\n  dispatch({\n    type: LOADING_UI\n  });\n  axios.post(\"/scream\", newScream).then(res => {\n    dispatch({\n      type: POST_SCREAM,\n      payload: res.data\n    });\n    dispatch({\n      type: CLEAR_ERRORS\n    });\n  }).catch(err => {\n    dispatch({\n      type: SET_ERRORS,\n      payload: err.response.data\n    });\n  });\n}; //Like scream\n\nexport const likeScream = screamId => dispatch => {\n  axios.get(`/scream/${screamId}/like`).then(res => {\n    dispatch({\n      type: LIKE_SCREAM,\n      payload: res.data\n    });\n  }).catch(err => console.log(err));\n}; //Unlike scream\n\nexport const unlikeScream = screamId => dispatch => {\n  axios.get(`/scream/${screamId}/unlike`).then(res => {\n    dispatch({\n      type: UNLIKE_SCREAM,\n      payload: res.data\n    });\n  }).catch(err => console.log(err));\n};\nexport const deleteScream = screamId => dispatch => {\n  axios.delete(`/scream/${screamId}`).then(() => {\n    dispatch({\n      type: DELETE_SCREAM,\n      payload: screamId\n    });\n  }).catch(err => console.log(err));\n};\nexport const clearErrors = () => dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n};","map":{"version":3,"sources":["/home/mastercalin/Desktop/social-client/src/redux/actions/dataActions.js"],"names":["SET_SCREAMS","LOADING_DATA","LIKE_SCREAM","UNLIKE_SCREAM","DELETE_SCREAM","SET_ERRORS","POST_SCREAM","CLEAR_ERRORS","LOADING_UI","SET_SCREAM","axios","getScreams","dispatch","type","get","then","res","payload","data","catch","err","getScream","screamId","postScream","newScream","post","response","likeScream","console","log","unlikeScream","deleteScream","delete","clearErrors"],"mappings":"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","sourcesContent":["import {\n  SET_SCREAMS,\n  LOADING_DATA,\n  LIKE_SCREAM,\n  UNLIKE_SCREAM,\n  DELETE_SCREAM,\n  SET_ERRORS,\n  POST_SCREAM,\n  CLEAR_ERRORS,\n  LOADING_UI,\n  SET_SCREAM\n} from \"../types\";\nimport axios from \"axios\";\n//All screams\nexport const getScreams = () => dispatch => {\n  dispatch({ type: LOADING_DATA });\n  axios\n    .get(\"/screams\")\n    .then(res => {\n      dispatch({\n        type: SET_SCREAMS,\n        payload: res.data\n      });\n    })\n    .catch(err => {\n      dispatch({\n        type: SET_SCREAMS,\n        payload: []\n      });\n    });\n};\nexport const getScream = screamId => dispatch => {\n  dispatch({ type: LOADING_UI });\n  axios.get(`/scream/${screamId}`).then(res => {\n    dispatch({\n      type: SET_SCREAM,\n      payload: res.data\n    });\n  });\n};\n//Post a scream\nexport const postScream = newScream => dispatch => {\n  dispatch({ type: LOADING_UI });\n  axios\n    .post(\"/scream\", newScream)\n    .then(res => {\n      dispatch({\n        type: POST_SCREAM,\n        payload: res.data\n      });\n      dispatch({ type: CLEAR_ERRORS });\n    })\n    .catch(err => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response.data\n      });\n    });\n};\n//Like scream\nexport const likeScream = screamId => dispatch => {\n  axios\n    .get(`/scream/${screamId}/like`)\n    .then(res => {\n      dispatch({\n        type: LIKE_SCREAM,\n        payload: res.data\n      });\n    })\n    .catch(err => console.log(err));\n};\n\n//Unlike scream\nexport const unlikeScream = screamId => dispatch => {\n  axios\n    .get(`/scream/${screamId}/unlike`)\n    .then(res => {\n      dispatch({\n        type: UNLIKE_SCREAM,\n        payload: res.data\n      });\n    })\n    .catch(err => console.log(err));\n};\n\nexport const deleteScream = screamId => dispatch => {\n  axios\n    .delete(`/scream/${screamId}`)\n    .then(() => {\n      dispatch({ type: DELETE_SCREAM, payload: screamId });\n    })\n    .catch(err => console.log(err));\n};\n\nexport const clearErrors = () => dispatch => {\n  dispatch({ type: CLEAR_ERRORS });\n};\n"]},"metadata":{},"sourceType":"module"}