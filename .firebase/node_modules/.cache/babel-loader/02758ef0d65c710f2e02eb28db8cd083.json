{"ast":null,"code":"import _objectSpread from \"/home/mastercalin/Desktop/social-client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/mastercalin/Desktop/social-client/src/pages/login.js\";\nimport React, { Component } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport AppIcon from \"../images/icon.png\";\nimport { Link } from \"react-router-dom\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\"; //Redux\n\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../redux/actions/userActions\";\n\nconst styles = theme => _objectSpread({}, theme);\n\nclass login extends Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const userData = {\n        email: this.state.email,\n        password: this.state.password\n      };\n      this.props.loginUser(userData, this.props.history);\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errors: {}\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      error: nextProps.UI.errors\n    });\n  }\n\n  render() {\n    const _this$props = this.props,\n          classes = _this$props.classes,\n          loading = _this$props.UI.loading;\n    const errors = this.state.errors;\n    return React.createElement(Grid, {\n      container: true,\n      className: classes.form,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      sm: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      item: true,\n      sm: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: AppIcon,\n      alt: \"monkey\",\n      className: classes.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      variant: \"h4\",\n      className: classes.pageTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Login\"), React.createElement(\"form\", {\n      noValidate: true,\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"email\",\n      name: \"email\",\n      type: \"email\",\n      label: \"Email\",\n      className: classes.textField,\n      helperText: errors.email,\n      error: errors.email ? true : false,\n      value: this.state.email,\n      onChange: this.handleChange,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"password\",\n      name: \"password\",\n      type: \"password\",\n      label: \"Password\",\n      className: classes.textField,\n      helperText: errors.password,\n      error: errors.password ? true : false,\n      value: this.state.password,\n      onChange: this.handleChange,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), errors.general && React.createElement(Typography, {\n      variant: \"body2\",\n      className: classes.customError,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, errors.general), React.createElement(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.button,\n      disabled: loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Login\", loading && React.createElement(CircularProgress, {\n      size: 30,\n      className: classes.progress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"don't have an account ? than sign up->\", React.createElement(Link, {\n      to: \"/signup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"here\")))), React.createElement(Grid, {\n      item: true,\n      sm: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }));\n  }\n\n}\n\nlogin.propTypes = {\n  classes: PropTypes.object.isRequired,\n  loginUser: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n  UI: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  user: state.user,\n  UI: state.UI\n});\n\nconst mapActionsToProps = {\n  loginUser\n};\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(login));","map":{"version":3,"sources":["/home/mastercalin/Desktop/social-client/src/pages/login.js"],"names":["React","Component","withStyles","PropTypes","AppIcon","Link","Grid","Typography","TextField","Button","CircularProgress","connect","loginUser","styles","theme","login","constructor","handleSubmit","event","preventDefault","userData","email","state","password","props","history","handleChange","setState","target","name","value","errors","componentWillReceiveProps","nextProps","error","UI","render","classes","loading","form","image","pageTitle","textField","general","customError","button","progress","propTypes","object","isRequired","func","user","mapStateToProps","mapActionsToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport AppIcon from \"../images/icon.png\";\nimport { Link } from \"react-router-dom\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n//Redux\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../redux/actions/userActions\";\n\nconst styles = theme => ({\n  ...theme\n});\n\nclass login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errors: {}\n    };\n  }\n  componentWillReceiveProps(nextProps) {\n    this.setState({ error: nextProps.UI.errors });\n  }\n  handleSubmit = event => {\n    event.preventDefault();\n    const userData = {\n      email: this.state.email,\n      password: this.state.password\n    };\n    this.props.loginUser(userData, this.props.history);\n  };\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n  render() {\n    const {\n      classes,\n      UI: { loading }\n    } = this.props;\n    const { errors } = this.state;\n\n    return (\n      <Grid container className={classes.form}>\n        <Grid item sm />\n        <Grid item sm>\n          <img src={AppIcon} alt=\"monkey\" className={classes.image} />\n          <Typography variant=\"h4\" className={classes.pageTitle}>\n            Login\n          </Typography>\n          <form noValidate onSubmit={this.handleSubmit}>\n            <TextField\n              id=\"email\"\n              name=\"email\"\n              type=\"email\"\n              label=\"Email\"\n              className={classes.textField}\n              helperText={errors.email}\n              error={errors.email ? true : false}\n              value={this.state.email}\n              onChange={this.handleChange}\n              fullWidth\n            />\n            <TextField\n              id=\"password\"\n              name=\"password\"\n              type=\"password\"\n              label=\"Password\"\n              className={classes.textField}\n              helperText={errors.password}\n              error={errors.password ? true : false}\n              value={this.state.password}\n              onChange={this.handleChange}\n              fullWidth\n            />\n            {errors.general && (\n              <Typography variant=\"body2\" className={classes.customError}>\n                {errors.general}\n              </Typography>\n            )}\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.button}\n              disabled={loading}\n            >\n              Login\n              {loading && (\n                <CircularProgress size={30} className={classes.progress} />\n              )}\n            </Button>\n            <br />\n            <small>\n              don't have an account ? than sign up->\n              <Link to=\"/signup\">here</Link>\n            </small>\n          </form>\n        </Grid>\n        <Grid item sm />\n      </Grid>\n    );\n  }\n}\n\nlogin.propTypes = {\n  classes: PropTypes.object.isRequired,\n  loginUser: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n  UI: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  user: state.user,\n  UI: state.UI\n});\n\nconst mapActionsToProps = {\n  loginUser\n};\n\nexport default connect(\n  mapStateToProps,\n  mapActionsToProps\n)(withStyles(styles)(login));\n"]},"metadata":{},"sourceType":"module"}