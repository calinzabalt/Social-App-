{"ast":null,"code":"import _defineProperty from \"/home/mastercalin/Desktop/full-stack-app/social-client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/mastercalin/Desktop/full-stack-app/social-client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/mastercalin/Desktop/full-stack-app/social-client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/mastercalin/Desktop/full-stack-app/social-client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/mastercalin/Desktop/full-stack-app/social-client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/mastercalin/Desktop/full-stack-app/social-client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _objectSpread from \"/home/mastercalin/Desktop/full-stack-app/social-client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/mastercalin/Desktop/full-stack-app/social-client/src/components/scream/PostScream.js\";\nimport React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport MyButton from \"../../util/MyButton\"; // Redux\n\nimport { connect } from \"react-redux\";\nimport { postScream, clearErrors } from \"../../redux/actions/dataActions\"; //Mui\n\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nvar styles = function styles(theme) {\n  return _objectSpread({}, theme.spreadThis, {\n    submitButton: {\n      position: \"relative\",\n      float: \"right\",\n      marginTop: 10\n    },\n    progressSpinner: {\n      position: \"absolute\"\n    },\n    closeButton: {\n      position: \"absolute\",\n      left: \"91%\",\n      top: \"6%\"\n    }\n  });\n};\n\nvar PostScream =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PostScream, _Component);\n\n  function PostScream() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PostScream);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PostScream)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      open: false,\n      body: \"\",\n      errors: {}\n    };\n\n    _this.handleOpen = function () {\n      _this.setState({\n        open: true\n      });\n    };\n\n    _this.handleClose = function () {\n      _this.props.clearErrors();\n\n      _this.setState({\n        open: false,\n        errors: {}\n      });\n    };\n\n    _this.handleChange = function (event) {\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n\n      _this.props.postScream({\n        body: _this.state.body\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(PostScream, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.UI.erros) {\n        this.setState({\n          errors: nextProps.UI.errors\n        });\n      }\n\n      if (!nextProps.UI.errors && !nextProps.UI.loading) {\n        this.setState({\n          body: \"\",\n          open: false,\n          errors: {}\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var errors = this.state.errors;\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          loading = _this$props.UI.loading;\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(MyButton, {\n        onClick: this.handleOpen,\n        tip: \"Post a post! :))\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(AddIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      })), React.createElement(Dialog, {\n        open: this.state.open,\n        onClose: this.handleClose,\n        fullWidth: true,\n        maxWidth: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(MyButton, {\n        tip: \"Close\",\n        onClick: this.handleClose,\n        tipClassName: classes.closeButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(CloseIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      })), React.createElement(DialogTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Post something!\"), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        name: \"body\",\n        type: \"text\",\n        label: \"SCREAM!!\",\n        multiline: true,\n        row: \"3\",\n        placeholder: \"Scream at your fellow\",\n        error: errors.body ? true : false,\n        helperText: errors.body,\n        className: classes.textField,\n        onChange: this.handleChange,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }), React.createElement(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        className: classes.submitButton,\n        disabled: loading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Submit\", loading && React.createElement(CircularProgress, {\n        size: 30,\n        className: classes.progressSpinner,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }))))));\n    }\n  }]);\n\n  return PostScream;\n}(Component);\n\nPostScream.propType = {\n  postScream: PropTypes.func.isRequired,\n  clearErrors: PropTypes.func.isRequired,\n  UI: PropTypes.object.isRequired\n};\n\nvar mapstateToProps = function mapstateToProps(state) {\n  return {\n    UI: state.UI\n  };\n};\n\nexport default connect(mapstateToProps, {\n  postScream: postScream,\n  clearErrors: clearErrors\n})(withStyles(styles)(PostScream));","map":{"version":3,"sources":["/home/mastercalin/Desktop/full-stack-app/social-client/src/components/scream/PostScream.js"],"names":["React","Component","Fragment","PropTypes","withStyles","MyButton","connect","postScream","clearErrors","Button","TextField","Dialog","DialogContent","DialogTitle","CircularProgress","AddIcon","CloseIcon","styles","theme","spreadThis","submitButton","position","float","marginTop","progressSpinner","closeButton","left","top","PostScream","state","open","body","errors","handleOpen","setState","handleClose","props","handleChange","event","target","name","value","handleSubmit","preventDefault","nextProps","UI","erros","loading","classes","textField","propType","func","isRequired","object","mapstateToProps"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,OAAOC,QAAP,MAAqB,qBAArB,C,CACA;;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,iCAAxC,C,CACA;;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,2BACfA,KAAK,CAACC,UADS;AAElBC,IAAAA,YAAY,EAAE;AACZC,MAAAA,QAAQ,EAAE,UADE;AAEZC,MAAAA,KAAK,EAAE,OAFK;AAGZC,MAAAA,SAAS,EAAE;AAHC,KAFI;AAOlBC,IAAAA,eAAe,EAAE;AACfH,MAAAA,QAAQ,EAAE;AADK,KAPC;AAUlBI,IAAAA,WAAW,EAAE;AACXJ,MAAAA,QAAQ,EAAE,UADC;AAEXK,MAAAA,IAAI,EAAE,KAFK;AAGXC,MAAAA,GAAG,EAAE;AAHM;AAVK;AAAA,CAApB;;IAiBMC,U;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,IAAI,EAAE,KADA;AAENC,MAAAA,IAAI,EAAE,EAFA;AAGNC,MAAAA,MAAM,EAAE;AAHF,K;;UAeRC,U,GAAa,YAAM;AACjB,YAAKC,QAAL,CAAc;AAAEJ,QAAAA,IAAI,EAAE;AAAR,OAAd;AACD,K;;UACDK,W,GAAc,YAAM;AAClB,YAAKC,KAAL,CAAW5B,WAAX;;AACA,YAAK0B,QAAL,CAAc;AAAEJ,QAAAA,IAAI,EAAE,KAAR;AAAeE,QAAAA,MAAM,EAAE;AAAvB,OAAd;AACD,K;;UACDK,Y,GAAe,UAAAC,KAAK,EAAI;AACtB,YAAKJ,QAAL,qBAAiBI,KAAK,CAACC,MAAN,CAAaC,IAA9B,EAAqCF,KAAK,CAACC,MAAN,CAAaE,KAAlD;AACD,K;;UACDC,Y,GAAe,UAAAJ,KAAK,EAAI;AACtBA,MAAAA,KAAK,CAACK,cAAN;;AACA,YAAKP,KAAL,CAAW7B,UAAX,CAAsB;AAAEwB,QAAAA,IAAI,EAAE,MAAKF,KAAL,CAAWE;AAAnB,OAAtB;AACD,K;;;;;;;8CAvByBa,S,EAAW;AACnC,UAAIA,SAAS,CAACC,EAAV,CAAaC,KAAjB,EAAwB;AACtB,aAAKZ,QAAL,CAAc;AACZF,UAAAA,MAAM,EAAEY,SAAS,CAACC,EAAV,CAAab;AADT,SAAd;AAGD;;AACD,UAAI,CAACY,SAAS,CAACC,EAAV,CAAab,MAAd,IAAwB,CAACY,SAAS,CAACC,EAAV,CAAaE,OAA1C,EAAmD;AACjD,aAAKb,QAAL,CAAc;AAAEH,UAAAA,IAAI,EAAE,EAAR;AAAYD,UAAAA,IAAI,EAAE,KAAlB;AAAyBE,UAAAA,MAAM,EAAE;AAAjC,SAAd;AACD;AACF;;;6BAeQ;AAAA,UACCA,MADD,GACY,KAAKH,KADjB,CACCG,MADD;AAAA,wBAKH,KAAKI,KALF;AAAA,UAGLY,OAHK,eAGLA,OAHK;AAAA,UAICD,OAJD,eAILF,EAJK,CAICE,OAJD;AAMP,aACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAU,QAAA,OAAO,EAAE,KAAKd,UAAxB;AAAoC,QAAA,GAAG,EAAC,kBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAIE,oBAAC,MAAD;AACE,QAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWC,IADnB;AAEE,QAAA,OAAO,EAAE,KAAKK,WAFhB;AAGE,QAAA,SAAS,MAHX;AAIE,QAAA,QAAQ,EAAC,IAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAME,oBAAC,QAAD;AACE,QAAA,GAAG,EAAC,OADN;AAEE,QAAA,OAAO,EAAE,KAAKA,WAFhB;AAGE,QAAA,YAAY,EAAEa,OAAO,CAACvB,WAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CANF,EAaE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAbF,EAcE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,QAAQ,EAAE,KAAKiB,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,KAAK,EAAC,UAHR;AAIE,QAAA,SAAS,MAJX;AAKE,QAAA,GAAG,EAAC,GALN;AAME,QAAA,WAAW,EAAC,uBANd;AAOE,QAAA,KAAK,EAAEV,MAAM,CAACD,IAAP,GAAc,IAAd,GAAqB,KAP9B;AAQE,QAAA,UAAU,EAAEC,MAAM,CAACD,IARrB;AASE,QAAA,SAAS,EAAEiB,OAAO,CAACC,SATrB;AAUE,QAAA,QAAQ,EAAE,KAAKZ,YAVjB;AAWE,QAAA,SAAS,MAXX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAcE,oBAAC,MAAD;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,OAAO,EAAC,WAFV;AAGE,QAAA,KAAK,EAAC,SAHR;AAIE,QAAA,SAAS,EAAEW,OAAO,CAAC5B,YAJrB;AAKE,QAAA,QAAQ,EAAE2B,OALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAQGA,OAAO,IACN,oBAAC,gBAAD;AACE,QAAA,IAAI,EAAE,EADR;AAEE,QAAA,SAAS,EAAEC,OAAO,CAACxB,eAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATJ,CAdF,CADF,CAdF,CAJF,CADF;AAsDD;;;;EA1FsBvB,S;;AA6FzB2B,UAAU,CAACsB,QAAX,GAAsB;AACpB3C,EAAAA,UAAU,EAAEJ,SAAS,CAACgD,IAAV,CAAeC,UADP;AAEpB5C,EAAAA,WAAW,EAAEL,SAAS,CAACgD,IAAV,CAAeC,UAFR;AAGpBP,EAAAA,EAAE,EAAE1C,SAAS,CAACkD,MAAV,CAAiBD;AAHD,CAAtB;;AAMA,IAAME,eAAe,GAAG,SAAlBA,eAAkB,CAAAzB,KAAK;AAAA,SAAK;AAChCgB,IAAAA,EAAE,EAAEhB,KAAK,CAACgB;AADsB,GAAL;AAAA,CAA7B;;AAIA,eAAevC,OAAO,CAACgD,eAAD,EAAkB;AAAE/C,EAAAA,UAAU,EAAVA,UAAF;AAAcC,EAAAA,WAAW,EAAXA;AAAd,CAAlB,CAAP,CACbJ,UAAU,CAACa,MAAD,CAAV,CAAmBW,UAAnB,CADa,CAAf","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport MyButton from \"../../util/MyButton\";\n// Redux\nimport { connect } from \"react-redux\";\nimport { postScream, clearErrors } from \"../../redux/actions/dataActions\";\n//Mui\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nconst styles = theme => ({\n  ...theme.spreadThis,\n  submitButton: {\n    position: \"relative\",\n    float: \"right\",\n    marginTop: 10\n  },\n  progressSpinner: {\n    position: \"absolute\"\n  },\n  closeButton: {\n    position: \"absolute\",\n    left: \"91%\",\n    top: \"6%\"\n  }\n});\n\nclass PostScream extends Component {\n  state = {\n    open: false,\n    body: \"\",\n    errors: {}\n  };\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.UI.erros) {\n      this.setState({\n        errors: nextProps.UI.errors\n      });\n    }\n    if (!nextProps.UI.errors && !nextProps.UI.loading) {\n      this.setState({ body: \"\", open: false, errors: {} });\n    }\n  }\n  handleOpen = () => {\n    this.setState({ open: true });\n  };\n  handleClose = () => {\n    this.props.clearErrors();\n    this.setState({ open: false, errors: {} });\n  };\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.postScream({ body: this.state.body });\n  };\n  render() {\n    const { errors } = this.state;\n    const {\n      classes,\n      UI: { loading }\n    } = this.props;\n    return (\n      <Fragment>\n        <MyButton onClick={this.handleOpen} tip=\"Post a post! :))\">\n          <AddIcon />\n        </MyButton>\n        <Dialog\n          open={this.state.open}\n          onClose={this.handleClose}\n          fullWidth\n          maxWidth=\"sm\"\n        >\n          <MyButton\n            tip=\"Close\"\n            onClick={this.handleClose}\n            tipClassName={classes.closeButton}\n          >\n            <CloseIcon />\n          </MyButton>\n          <DialogTitle>Post something!</DialogTitle>\n          <DialogContent>\n            <form onSubmit={this.handleSubmit}>\n              <TextField\n                name=\"body\"\n                type=\"text\"\n                label=\"SCREAM!!\"\n                multiline\n                row=\"3\"\n                placeholder=\"Scream at your fellow\"\n                error={errors.body ? true : false}\n                helperText={errors.body}\n                className={classes.textField}\n                onChange={this.handleChange}\n                fullWidth\n              />\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submitButton}\n                disabled={loading}\n              >\n                Submit\n                {loading && (\n                  <CircularProgress\n                    size={30}\n                    className={classes.progressSpinner}\n                  />\n                )}\n              </Button>\n            </form>\n          </DialogContent>\n        </Dialog>\n      </Fragment>\n    );\n  }\n}\n\nPostScream.propType = {\n  postScream: PropTypes.func.isRequired,\n  clearErrors: PropTypes.func.isRequired,\n  UI: PropTypes.object.isRequired\n};\n\nconst mapstateToProps = state => ({\n  UI: state.UI\n});\n\nexport default connect(mapstateToProps, { postScream, clearErrors })(\n  withStyles(styles)(PostScream)\n);\n"]},"metadata":{},"sourceType":"module"}