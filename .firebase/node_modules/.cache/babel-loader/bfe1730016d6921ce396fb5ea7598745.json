{"ast":null,"code":"import { SET_SCREAMS, LOADING_DATA, LIKE_SCREAM, UNLIKE_SCREAM, DELETE_SCREAM, SET_ERRORS, POST_SCREAM, CLEAR_ERRORS, LOADING_UI, SET_SCREAM, STOP_LOADING_UI, SUBMIT_COMMENT } from \"../types\";\nimport axios from \"axios\"; //All screams\n\nexport var getScreams = function getScreams() {\n  return function (dispatch) {\n    dispatch({\n      type: LOADING_DATA\n    });\n    axios.get(\"/screams\").then(function (res) {\n      dispatch({\n        type: SET_SCREAMS,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      dispatch({\n        type: SET_SCREAMS,\n        payload: []\n      });\n    });\n  };\n};\nexport var getScream = function getScream(screamId) {\n  return function (dispatch) {\n    dispatch({\n      type: LOADING_UI\n    });\n    axios.get(\"/scream/\".concat(screamId)).then(function (res) {\n      dispatch({\n        type: SET_SCREAM,\n        payload: res.data\n      });\n      dispatch({\n        type: STOP_LOADING_UI\n      });\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  };\n}; //Post a scream\n\nexport var postScream = function postScream(newScream) {\n  return function (dispatch) {\n    dispatch({\n      type: LOADING_UI\n    });\n    axios.post(\"/scream\", newScream).then(function (res) {\n      dispatch({\n        type: POST_SCREAM,\n        payload: res.data\n      });\n      dispatch(clearErrors());\n    }).catch(function (err) {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; //Like scream\n\nexport var likeScream = function likeScream(screamId) {\n  return function (dispatch) {\n    axios.get(\"/scream/\".concat(screamId, \"/like\")).then(function (res) {\n      dispatch({\n        type: LIKE_SCREAM,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  };\n}; //Unlike scream\n\nexport var unlikeScream = function unlikeScream(screamId) {\n  return function (dispatch) {\n    axios.get(\"/scream/\".concat(screamId, \"/unlike\")).then(function (res) {\n      dispatch({\n        type: UNLIKE_SCREAM,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  };\n}; //Submit comment\n\nexport var submitComment = function submitComment(screamId, commentData) {\n  return function (dispatch) {\n    axios.post(\"/scream/\".concat(screamId, \"/comment\"), commentData).then(function (res) {\n      dispatch({\n        type: SUBMIT_COMMENT,\n        payload: res.data\n      });\n      dispatch(clearErrors());\n    }).catch(function (err) {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n};\nexport var deleteScream = function deleteScream(screamId) {\n  return function (dispatch) {\n    axios.delete(\"/scream/\".concat(screamId)).then(function () {\n      dispatch({\n        type: DELETE_SCREAM,\n        payload: screamId\n      });\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  };\n};\nexport var getUserData = function getUserData(userHandle) {\n  return function (dispatch) {\n    dispatch({\n      type: LOADING_DATA\n    });\n    axios.get(\"/user/\".concat(userHandle)).then(function (res) {\n      dispatch({\n        type: SET_SCREAMS,\n        payload: res.data.screams\n      });\n    }).catch(function () {\n      dispatch({\n        type: SET_SCREAMS,\n        payload: null\n      });\n    });\n  };\n};\nexport var clearErrors = function clearErrors() {\n  return function (dispatch) {\n    dispatch({\n      type: CLEAR_ERRORS\n    });\n  };\n};","map":{"version":3,"sources":["/home/mastercalin/Desktop/full-stack-app/social-client/src/redux/actions/dataActions.js"],"names":["SET_SCREAMS","LOADING_DATA","LIKE_SCREAM","UNLIKE_SCREAM","DELETE_SCREAM","SET_ERRORS","POST_SCREAM","CLEAR_ERRORS","LOADING_UI","SET_SCREAM","STOP_LOADING_UI","SUBMIT_COMMENT","axios","getScreams","dispatch","type","get","then","res","payload","data","catch","err","getScream","screamId","console","log","postScream","newScream","post","clearErrors","response","likeScream","unlikeScream","submitComment","commentData","deleteScream","delete","getUserData","userHandle","screams"],"mappings":"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","sourcesContent":["import {\n  SET_SCREAMS,\n  LOADING_DATA,\n  LIKE_SCREAM,\n  UNLIKE_SCREAM,\n  DELETE_SCREAM,\n  SET_ERRORS,\n  POST_SCREAM,\n  CLEAR_ERRORS,\n  LOADING_UI,\n  SET_SCREAM,\n  STOP_LOADING_UI,\n  SUBMIT_COMMENT\n} from \"../types\";\nimport axios from \"axios\";\n//All screams\nexport const getScreams = () => dispatch => {\n  dispatch({ type: LOADING_DATA });\n  axios\n    .get(\"/screams\")\n    .then(res => {\n      dispatch({\n        type: SET_SCREAMS,\n        payload: res.data\n      });\n    })\n    .catch(err => {\n      dispatch({\n        type: SET_SCREAMS,\n        payload: []\n      });\n    });\n};\nexport const getScream = screamId => dispatch => {\n  dispatch({ type: LOADING_UI });\n  axios\n    .get(`/scream/${screamId}`)\n    .then(res => {\n      dispatch({\n        type: SET_SCREAM,\n        payload: res.data\n      });\n      dispatch({ type: STOP_LOADING_UI });\n    })\n    .catch(err => console.log(err));\n};\n//Post a scream\nexport const postScream = newScream => dispatch => {\n  dispatch({ type: LOADING_UI });\n  axios\n    .post(\"/scream\", newScream)\n    .then(res => {\n      dispatch({\n        type: POST_SCREAM,\n        payload: res.data\n      });\n      dispatch(clearErrors());\n    })\n    .catch(err => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response.data\n      });\n    });\n};\n//Like scream\nexport const likeScream = screamId => dispatch => {\n  axios\n    .get(`/scream/${screamId}/like`)\n    .then(res => {\n      dispatch({\n        type: LIKE_SCREAM,\n        payload: res.data\n      });\n    })\n    .catch(err => console.log(err));\n};\n\n//Unlike scream\nexport const unlikeScream = screamId => dispatch => {\n  axios\n    .get(`/scream/${screamId}/unlike`)\n    .then(res => {\n      dispatch({\n        type: UNLIKE_SCREAM,\n        payload: res.data\n      });\n    })\n    .catch(err => console.log(err));\n};\n//Submit comment\nexport const submitComment = (screamId, commentData) => dispatch => {\n  axios\n    .post(`/scream/${screamId}/comment`, commentData)\n    .then(res => {\n      dispatch({\n        type: SUBMIT_COMMENT,\n        payload: res.data\n      });\n      dispatch(clearErrors());\n    })\n    .catch(err => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response.data\n      });\n    });\n};\nexport const deleteScream = screamId => dispatch => {\n  axios\n    .delete(`/scream/${screamId}`)\n    .then(() => {\n      dispatch({ type: DELETE_SCREAM, payload: screamId });\n    })\n    .catch(err => console.log(err));\n};\n\nexport const getUserData = userHandle => dispatch => {\n  dispatch({ type: LOADING_DATA });\n  axios\n    .get(`/user/${userHandle}`)\n    .then(res => {\n      dispatch({\n        type: SET_SCREAMS,\n        payload: res.data.screams\n      });\n    })\n    .catch(() => {\n      dispatch({\n        type: SET_SCREAMS,\n        payload: null\n      });\n    });\n};\n\nexport const clearErrors = () => dispatch => {\n  dispatch({ type: CLEAR_ERRORS });\n};\n"]},"metadata":{},"sourceType":"module"}